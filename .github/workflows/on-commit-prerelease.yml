name: Pre-Release on Commit

on:
  push:
    branches:
      - '**'

jobs:
  pre-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - name: Install dependencies
      run: npm install

    - name: Make build.bat executable
      run: chmod +x build.sh

    - name: Build project
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        ./build.sh -v "2.1.0_$COMMIT_HASH"

    - name: Commit and push updated manifest files
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add -f manifest.json dist/manifest.json
        git commit -m "Update manifest files for commit $COMMIT_HASH"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Extract changelog from commits
      id: changelog
      run: |
        CHANGELOG=$(git log -1 --pretty=format:%s)
        echo "::set-output name=changelog::$CHANGELOG"

    - name: Install web-ext
      run: npm install --save-dev web-ext

    - name: Sign Extension
      env:
        WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
        WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      run: |
        SIGN_OUTPUT=$(npx web-ext sign --source-dir=dist --artifacts-dir=build --api-key=$WEB_EXT_API_KEY --api-secret=$WEB_EXT_API_SECRET --channel=unlisted)
        SIGNED_FILE=$(echo $SIGN_OUTPUT | grep -oP 'build/.*\.xpi')
        echo "::set-output name=signed_file::$SIGNED_FILE"

    - name: Create GitHub Pre-Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="pre-release-$(date +%Y%m%d%H%M%S)"
        RELEASE_NAME="Pre-Release $TAG_NAME"
        CHANGELOG="${{ steps.changelog.outputs.changelog }}"
        SIGNED_FILE="${{ steps.sign_extension.outputs.signed_file }}"
        gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$CHANGELOG" --prerelease build/emoji.zip build/emoji-src.zip "$SIGNED_FILE"