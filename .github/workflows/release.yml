name: Publish Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install web-ext
      run: npm install --save-dev web-ext

    - name: Sign Extension
      env:
        WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
        WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      run: |
        SIGN_OUTPUT=$(npx web-ext sign --source-dir=dist --artifacts-dir=build --api-key=$WEB_EXT_API_KEY --api-secret=$WEB_EXT_API_SECRET --channel=listed --timeout=172800000)
        SIGNED_FILE=$(echo $SIGN_OUTPUT | grep -oP 'build/.*\.xpi')
        echo "::set-output name=signed_file::$SIGNED_FILE"

    - name: Extract changelog for current version
      id: changelog
      run: |
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        VERSION="${TAG_NAME#v}"
        CHANGELOG=$(awk "/^# Version $VERSION/,/^# Version /{if (!/^# Version $VERSION/) print}" changelog.md | sed '$d')
        echo "::set-output name=changelog::$CHANGELOG"

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        RELEASE_NAME="Release $TAG_NAME"
        CHANGELOG="${{ steps.changelog.outputs.changelog }}"
        SIGNED_FILE="${{ steps.sign_extension.outputs.signed_file }}"
        echo "Creating release $RELEASE_NAME for tag $TAG_NAME"
        echo "Changelog: $CHANGELOG"
        echo "Signed file: $SIGNED_FILE"
        gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$CHANGELOG" "$SIGNED_FILE"