name: Publish Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install web-ext
      run: npm install --save-dev web-ext

    - name: Zip sources
      run: tar -czf dist/emoji-src.zip --exclude=node_modules --exclude=build --exclude=.idea --exclude=dist --exclude=dev *

    - name: Build extension
      run: webpack --config webpack-release.config.js

    - name: Sign Extension
      env:
        WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
        WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      run: |
        SIGN_OUTPUT=$(npx web-ext sign --source-dir=dist --artifacts-dir=build --amo-metadata=dist/amo_metadata.json --upload-source-code=dist/emoji-src.zip --api-key=$WEB_EXT_API_KEY --api-secret=$WEB_EXT_API_SECRET --channel=listed --timeout=172800000)
        echo "$SIGN_OUTPUT"
        SIGNED_FILE=$(echo $SIGN_OUTPUT | grep -oP 'build/.*\.xpi')
        echo "SIGNED_FILE=$SIGNED_FILE" >> $GITHUB_ENV

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        RELEASE_NAME="Release $TAG_NAME"
        echo "Creating release $RELEASE_NAME for tag $TAG_NAME"
        echo "Changelog: $CHANGELOG"
        echo "Signed file: $SIGNED_FILE"
        gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes-file dist/changelog.txt "$SIGNED_FILE"